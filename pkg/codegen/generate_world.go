package codegen

import (
	"fmt"

	"github.com/golang-cz/textcase"
	"github.com/moznion/gowrtr/generator"
	"github.com/rioam2/witigo/pkg/wit"
)

func GenerateFromWorld(w wit.WitWorldDefinition, packageName string) *generator.Root {
	root := generator.NewRoot().AddStatements(
		generator.NewComment(" Code generated by witigo -- DO NOT EDIT"),
		generator.NewComment(" World: "+w.Name()),
		generator.NewNewline(),
		generator.NewPackage(textcase.SnakeCase(packageName)),
		generator.NewRawStatement("import _ \"embed\""),
		generator.NewNewline(),
		generator.NewComment(fmt.Sprintf("go:embed %s_core.wasm", textcase.SnakeCase(packageName))),
		generator.NewRawStatement("var coreModule []byte"),
	)
	for _, t := range w.Types() {
		typeGen := GenerateTypedefFromType(t)
		if typeGen == nil {
			continue
		}
		root = root.AddStatements(typeGen, generator.NewNewline())
	}
	for _, f := range w.ExportedFunctions() {
		funcGen := GenerateFromFunction(f)
		if funcGen == nil {
			continue
		}
		root = root.AddStatements(funcGen, generator.NewNewline())
	}
	return root
}
